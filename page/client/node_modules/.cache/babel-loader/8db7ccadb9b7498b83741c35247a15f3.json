{"ast":null,"code":"import _slicedToArray from\"C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef,Component}from\"react\";import Title from\"../Template/Title.jsx\";import LineChart from\"../Template/LineChart\";import Axios from\"axios\";import config from\"../../config/Config\";import TradingViewWidget,{Themes}from'react-tradingview-widget';/** \nconst Chart = () => {\n  const [chartData, setChartData] = useState(undefined);\n\n  useEffect(() => {\n    const getData = async () => {\n      const url = config.base_url + `/api/data/random`;\n      const response = await Axios.get(url);\n      if (response.data.status === \"success\") {\n        setChartData(response.data);\n      }\n    };\n    getData();\n  }, []);\n\n\n  return (\n    <React.Fragment>\n      {chartData && (\n        <div style={{ minHeight: \"240px\" }}>\n          <Title>Explore {chartData.name}'s Stock Chart</Title>\n\n          <LineChart\n            pastDataPeriod={chartData.data}\n            stockInfo={{ ticker: chartData.ticker }}\n            duration={\"3 years\"}\n          />\n\n          new Example\n        </div>\n      )}\n    </React.Fragment>\n  );\n};**/import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=function Chart(){var tradingRef=useRef(null);var _useState=useState(\"AAPL\"),_useState2=_slicedToArray(_useState,2),symbol=_useState2[0],setSymbol=_useState2[1];useEffect(function(){console.log(tradingRef.current.props.symbol);},[]);console.log(symbol);return/*#__PURE__*/_jsx(TradingViewWidget,{symbol:symbol,theme:Themes.LIGHT,locale:\"en\",ref:tradingRef,autosize:true});};export default Chart;","map":{"version":3,"sources":["C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/src/components/Dashboard/Chart.jsx"],"names":["React","useState","useEffect","useRef","Component","Title","LineChart","Axios","config","TradingViewWidget","Themes","Chart","tradingRef","symbol","setSymbol","console","log","current","props","LIGHT"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,CAA6CC,SAA7C,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,uBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,iBAAP,EAA4BC,MAA5B,KAA0C,0BAA1C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,K,2CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAMC,CAAAA,UAAU,CAAGT,MAAM,CAAC,IAAD,CAAzB,CACA,cAA4BF,QAAQ,CAAC,MAAD,CAApC,wCAAOY,MAAP,eAAeC,SAAf,eAEAZ,SAAS,CAAC,UAAM,CACda,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,OAAX,CAAmBC,KAAnB,CAAyBL,MAArC,EACD,CAFQ,CAEN,EAFM,CAAT,CAIAE,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAEA,mBACE,KAAC,iBAAD,EACE,MAAM,CAAEA,MADV,CAEE,KAAK,CAAEH,MAAM,CAACS,KAFhB,CAGE,MAAM,CAAC,IAHT,CAIE,GAAG,CAAEP,UAJP,CAKE,QAAQ,KALV,EADF,CASD,CAnBD,CAqBA,cAAeD,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect, useRef, Component } from \"react\";\nimport Title from \"../Template/Title.jsx\";\nimport LineChart from \"../Template/LineChart\";\nimport Axios from \"axios\";\nimport config from \"../../config/Config\";\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\n/** \nconst Chart = () => {\n  const [chartData, setChartData] = useState(undefined);\n\n  useEffect(() => {\n    const getData = async () => {\n      const url = config.base_url + `/api/data/random`;\n      const response = await Axios.get(url);\n      if (response.data.status === \"success\") {\n        setChartData(response.data);\n      }\n    };\n    getData();\n  }, []);\n\n\n  return (\n    <React.Fragment>\n      {chartData && (\n        <div style={{ minHeight: \"240px\" }}>\n          <Title>Explore {chartData.name}'s Stock Chart</Title>\n\n          <LineChart\n            pastDataPeriod={chartData.data}\n            stockInfo={{ ticker: chartData.ticker }}\n            duration={\"3 years\"}\n          />\n\n          new Example\n        </div>\n      )}\n    </React.Fragment>\n  );\n};**/\n\n\nconst Chart = () => {\n  const tradingRef = useRef(null);\n  const [symbol, setSymbol] = useState(\"AAPL\");\n\n  useEffect(() => {\n    console.log(tradingRef.current.props.symbol);\n  }, []);\n\n  console.log(symbol);\n\n  return (\n    <TradingViewWidget\n      symbol={symbol}\n      theme={Themes.LIGHT}\n      locale=\"en\"\n      ref={tradingRef}\n      autosize\n    />\n  );\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}