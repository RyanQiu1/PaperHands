{"ast":null,"code":"/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nimport createCSSStyleSheet from './createCSSStyleSheet';\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\nvar defaultId = 'react-native-stylesheet';\nvar roots = new WeakMap();\nvar sheets = [];\nvar initialRules = [// minimal top-level reset\n'html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', // minimal form pseudo-element reset\n'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\nexport function createSheet(root, id) {\n  if (id === void 0) {\n    id = defaultId;\n  }\n\n  var sheet;\n\n  if (ExecutionEnvironment.canUseDOM) {\n    var rootNode = root != null ? root.getRootNode() : document; // Create the initial style sheet\n\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      roots.set(rootNode, sheets.length);\n      sheets.push(sheet);\n    } else {\n      var index = roots.get(rootNode);\n\n      if (index == null) {\n        var initialSheet = sheets[0]; // If we're creating a new sheet, populate it with existing styles\n\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : ''; // Cast rootNode to 'any' because Flow types for getRootNode are wrong\n\n        sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id, rootNode, textContent));\n        roots.set(rootNode, sheets.length);\n        sheets.push(sheet);\n      } else {\n        sheet = sheets[index];\n      }\n    }\n  } else {\n    // Create the initial style sheet\n    if (sheets.length === 0) {\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\n      initialRules.forEach(function (rule) {\n        sheet.insert(rule, 0);\n      });\n      sheets.push(sheet);\n    } else {\n      sheet = sheets[0];\n    }\n  }\n\n  return {\n    getTextContent: function getTextContent() {\n      return sheet.getTextContent();\n    },\n    id: id,\n    insert: function insert(cssText, groupValue) {\n      sheets.forEach(function (s) {\n        s.insert(cssText, groupValue);\n      });\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/FTChu/OneDrive/Documents/GitHub/PaperHands/page/client/node_modules/react-native-web/dist/exports/StyleSheet/dom/index.js"],"names":["ExecutionEnvironment","createCSSStyleSheet","createOrderedCSSStyleSheet","defaultId","roots","WeakMap","sheets","initialRules","createSheet","root","id","sheet","canUseDOM","rootNode","getRootNode","document","length","forEach","rule","insert","set","push","index","get","initialSheet","textContent","getTextContent","cssText","groupValue","s"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\r\nimport createCSSStyleSheet from './createCSSStyleSheet';\r\nimport createOrderedCSSStyleSheet from './createOrderedCSSStyleSheet';\r\nvar defaultId = 'react-native-stylesheet';\r\nvar roots = new WeakMap();\r\nvar sheets = [];\r\nvar initialRules = [// minimal top-level reset\r\n'html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:rgba(0,0,0,0);}', 'body{margin:0;}', // minimal form pseudo-element reset\r\n'button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}', 'input::-webkit-search-cancel-button,input::-webkit-search-decoration,input::-webkit-search-results-button,input::-webkit-search-results-decoration{display:none;}'];\r\nexport function createSheet(root, id) {\r\n  if (id === void 0) {\r\n    id = defaultId;\r\n  }\r\n\r\n  var sheet;\r\n\r\n  if (ExecutionEnvironment.canUseDOM) {\r\n    var rootNode = root != null ? root.getRootNode() : document; // Create the initial style sheet\r\n\r\n    if (sheets.length === 0) {\r\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\r\n      initialRules.forEach(function (rule) {\r\n        sheet.insert(rule, 0);\r\n      });\r\n      roots.set(rootNode, sheets.length);\r\n      sheets.push(sheet);\r\n    } else {\r\n      var index = roots.get(rootNode);\r\n\r\n      if (index == null) {\r\n        var initialSheet = sheets[0]; // If we're creating a new sheet, populate it with existing styles\r\n\r\n        var textContent = initialSheet != null ? initialSheet.getTextContent() : ''; // Cast rootNode to 'any' because Flow types for getRootNode are wrong\r\n\r\n        sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id, rootNode, textContent));\r\n        roots.set(rootNode, sheets.length);\r\n        sheets.push(sheet);\r\n      } else {\r\n        sheet = sheets[index];\r\n      }\r\n    }\r\n  } else {\r\n    // Create the initial style sheet\r\n    if (sheets.length === 0) {\r\n      sheet = createOrderedCSSStyleSheet(createCSSStyleSheet(id));\r\n      initialRules.forEach(function (rule) {\r\n        sheet.insert(rule, 0);\r\n      });\r\n      sheets.push(sheet);\r\n    } else {\r\n      sheet = sheets[0];\r\n    }\r\n  }\r\n\r\n  return {\r\n    getTextContent: function getTextContent() {\r\n      return sheet.getTextContent();\r\n    },\r\n    id: id,\r\n    insert: function insert(cssText, groupValue) {\r\n      sheets.forEach(function (s) {\r\n        s.insert(cssText, groupValue);\r\n      });\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}