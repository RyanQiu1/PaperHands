{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\GitHub\\\\PaperHands\\\\page\\\\client\\\\src\\\\components\\\\Dashboard\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, Component } from \"react\";\nimport Title from \"../Template/Title.jsx\";\nimport LineChart from \"../Template/LineChart\";\nimport Axios from \"axios\";\nimport config from \"../../config/Config\";\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\n/** \nconst Chart = () => {\n  const [chartData, setChartData] = useState(undefined);\n\n  useEffect(() => {\n    const getData = async () => {\n      const url = config.base_url + `/api/data/random`;\n      const response = await Axios.get(url);\n      if (response.data.status === \"success\") {\n        setChartData(response.data);\n      }\n    };\n    getData();\n  }, []);\n\n\n  return (\n    <React.Fragment>\n      {chartData && (\n        <div style={{ minHeight: \"240px\" }}>\n          <Title>Explore {chartData.name}'s Stock Chart</Title>\n\n          <LineChart\n            pastDataPeriod={chartData.data}\n            stockInfo={{ ticker: chartData.ticker }}\n            duration={\"3 years\"}\n          />\n\n          new Example\n        </div>\n      )}\n    </React.Fragment>\n  );\n};**/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = () => {\n  _s();\n\n  const tradingRef = useRef(null);\n  const [symbol, setSymbol] = useState(\"AAPL\");\n  useEffect(() => {\n    console.log(tradingRef.current.props.symbol);\n  }, []);\n  console.log(symbol);\n  return /*#__PURE__*/_jsxDEV(TradingViewWidget, {\n    symbol: symbol,\n    theme: Themes.LIGHT,\n    locale: \"en\",\n    ref: tradingRef,\n    autosize: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"eIctcjAEIJnVMbwfGptw3v+n8go=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/src/components/Dashboard/Chart.jsx"],"names":["React","useState","useEffect","useRef","Component","Title","LineChart","Axios","config","TradingViewWidget","Themes","Chart","tradingRef","symbol","setSymbol","console","log","current","props","LIGHT"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,iBAAP,IAA4BC,MAA5B,QAA0C,0BAA1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,UAAU,GAAGT,MAAM,CAAC,IAAD,CAAzB;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,MAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACK,OAAX,CAAmBC,KAAnB,CAAyBL,MAArC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,sBACE,QAAC,iBAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,KAAK,EAAEH,MAAM,CAACS,KAFhB;AAGE,IAAA,MAAM,EAAC,IAHT;AAIE,IAAA,GAAG,EAAEP,UAJP;AAKE,IAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAnBD;;GAAMD,K;;KAAAA,K;AAqBN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useRef, Component } from \"react\";\nimport Title from \"../Template/Title.jsx\";\nimport LineChart from \"../Template/LineChart\";\nimport Axios from \"axios\";\nimport config from \"../../config/Config\";\nimport TradingViewWidget, { Themes } from 'react-tradingview-widget';\n/** \nconst Chart = () => {\n  const [chartData, setChartData] = useState(undefined);\n\n  useEffect(() => {\n    const getData = async () => {\n      const url = config.base_url + `/api/data/random`;\n      const response = await Axios.get(url);\n      if (response.data.status === \"success\") {\n        setChartData(response.data);\n      }\n    };\n    getData();\n  }, []);\n\n\n  return (\n    <React.Fragment>\n      {chartData && (\n        <div style={{ minHeight: \"240px\" }}>\n          <Title>Explore {chartData.name}'s Stock Chart</Title>\n\n          <LineChart\n            pastDataPeriod={chartData.data}\n            stockInfo={{ ticker: chartData.ticker }}\n            duration={\"3 years\"}\n          />\n\n          new Example\n        </div>\n      )}\n    </React.Fragment>\n  );\n};**/\n\n\nconst Chart = () => {\n  const tradingRef = useRef(null);\n  const [symbol, setSymbol] = useState(\"AAPL\");\n\n  useEffect(() => {\n    console.log(tradingRef.current.props.symbol);\n  }, []);\n\n  console.log(symbol);\n\n  return (\n    <TradingViewWidget\n      symbol={symbol}\n      theme={Themes.LIGHT}\n      locale=\"en\"\n      ref={tradingRef}\n      autosize\n    />\n  );\n};\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}