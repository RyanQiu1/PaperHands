{"ast":null,"code":"import _slicedToArray from\"C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import{Link}from\"@material-ui/core\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Title from\"../Template/Title.jsx\";import SaleModal from\"./SaleModal\";import styles from\"./Dashboard.module.css\";import{StyleSheet,Button,View,SafeAreaView,Text,Alert}from'react-native';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Purchases=function Purchases(_ref){var purchasedStocks=_ref.purchasedStocks;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),saleOpen=_useState2[0],setSaleOpen=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),stock=_useState4[0],setStock=_useState4[1];var roundNumber=function roundNumber(num){return Math.round((num+Number.EPSILON)*100)/100;};var openSaleModal=function openSaleModal(stock){setStock(stock);setSaleOpen(true);};var onSearchButtonClick=function onSearchButtonClick(e){e.preventDefault();setCurrentPage(\"search\");};return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{minHeight:\"200px\"},children:[/*#__PURE__*/_jsx(Title,{children:\"Stocks in Your Portfolio\"}),/*#__PURE__*/_jsx(Button,{onClick:onSearchButtonClick}),/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Company Ticker\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Name\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Quantity\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Price of Purchase\"}),/*#__PURE__*/_jsx(TableCell,{children:\"Purchase Total\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Current Price\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Current Total\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Difference\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:purchasedStocks.map(function(row){var difference=(row.currentPrice-row.purchasePrice)/row.currentPrice;var purchaseTotal=Number(row.quantity)*Number(row.purchasePrice);var currentTotal=Number(row.quantity)*Number(row.currentPrice);return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(Link,{onClick:function onClick(){return openSaleModal(row);},children:row.ticker})}),/*#__PURE__*/_jsx(TableCell,{children:row.name||\"----\"}),/*#__PURE__*/_jsx(TableCell,{children:row.quantity||\"----\"}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",row.purchasePrice.toLocaleString()||\"----\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",children:[\"$\",roundNumber(purchaseTotal).toLocaleString()||\"----\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",className:row.currentPrice>=row.purchasePrice?styles.positive:styles.negative,children:[\"$\",row.currentPrice.toLocaleString()||\"----\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",className:currentTotal>=purchaseTotal?styles.positive:styles.negative,children:[\"$\",roundNumber(currentTotal).toLocaleString()||\"----\"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"right\",className:difference>=0?styles.positive:styles.negative,children:[difference>=0?\"▲\":\"▼\",\" \",Math.abs(difference*100).toFixed(2),\"%\"]})]},row.id);})})]}),saleOpen&&stock&&/*#__PURE__*/_jsx(SaleModal,{setSaleOpen:setSaleOpen,stock:stock})]})});};export default Purchases;","map":{"version":3,"sources":["C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/src/components/Dashboard/Purchases.jsx"],"names":["React","useState","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","SaleModal","styles","StyleSheet","Button","View","SafeAreaView","Text","Alert","Purchases","purchasedStocks","saleOpen","setSaleOpen","undefined","stock","setStock","roundNumber","num","Math","round","Number","EPSILON","openSaleModal","onSearchButtonClick","e","preventDefault","setCurrentPage","minHeight","map","row","difference","currentPrice","purchasePrice","purchaseTotal","quantity","currentTotal","ticker","name","toLocaleString","positive","negative","abs","toFixed","id"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"../Template/Title.jsx\";\nimport SaleModal from \"./SaleModal\";\nimport styles from \"./Dashboard.module.css\";\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react-native';\n\nconst Purchases = ({ purchasedStocks }) => {\n  const [saleOpen, setSaleOpen] = useState(false);\n  const [stock, setStock] = useState(undefined);\n\n  const roundNumber = (num) => {\n    return Math.round((num + Number.EPSILON) * 100) / 100;\n  };\n\n  const openSaleModal = (stock) => {\n    setStock(stock);\n    setSaleOpen(true);\n  };\n\n  const onSearchButtonClick = (e) => {\n    e.preventDefault();\n    setCurrentPage(\"search\");\n  };\n  \n  return (\n    <React.Fragment>\n      <div style={{ minHeight: \"200px\" }}>\n        <Title>Stocks in Your Portfolio</Title>\n        <Button\n        onClick={onSearchButtonClick}\n      />\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Company Ticker</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Quantity</TableCell>\n              <TableCell>Price of Purchase</TableCell>\n              <TableCell>Purchase Total</TableCell>\n              <TableCell align=\"right\">Current Price</TableCell>\n              <TableCell align=\"right\">Current Total</TableCell>\n              <TableCell align=\"right\">Difference</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {purchasedStocks.map((row) => {\n              const difference =\n                (row.currentPrice - row.purchasePrice) / row.currentPrice;\n              const purchaseTotal =\n                Number(row.quantity) * Number(row.purchasePrice);\n              const currentTotal =\n                Number(row.quantity) * Number(row.currentPrice);\n              return (\n                <TableRow key={row.id}>\n                  <TableCell>\n                    <Link onClick={() => openSaleModal(row)}>{row.ticker}</Link>\n                  </TableCell>\n                  <TableCell>{row.name || \"----\"}</TableCell>\n                  <TableCell>{row.quantity || \"----\"}</TableCell>\n                  <TableCell align=\"right\">\n                    ${row.purchasePrice.toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${roundNumber(purchaseTotal).toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={\n                      row.currentPrice >= row.purchasePrice\n                        ? styles.positive\n                        : styles.negative\n                    }\n                  >\n                    ${row.currentPrice.toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={\n                      currentTotal >= purchaseTotal\n                        ? styles.positive\n                        : styles.negative\n                    }\n                  >\n                    ${roundNumber(currentTotal).toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={\n                      difference >= 0 ? styles.positive : styles.negative\n                    }\n                  >\n                    {difference >= 0 ? \"▲\" : \"▼\"}{\" \"}\n                    {Math.abs(difference * 100).toFixed(2)}%\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n        {saleOpen && stock && (\n          <SaleModal setSaleOpen={setSaleOpen} stock={stock} />\n        )}\n      </div>\n\n      \n    </React.Fragment>\n  );\n};\n\nexport default Purchases;\n"]},"metadata":{},"sourceType":"module"}