{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryan\\\\Documents\\\\GitHub\\\\PaperHands\\\\page\\\\client\\\\src\\\\components\\\\Dashboard\\\\Purchases.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"../Template/Title.jsx\";\nimport SaleModal from \"./SaleModal\";\nimport styles from \"./Dashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Purchases = _ref => {\n  _s();\n\n  let {\n    purchasedStocks\n  } = _ref;\n  const [saleOpen, setSaleOpen] = useState(false);\n  const [stock, setStock] = useState(undefined);\n\n  const roundNumber = num => {\n    return Math.round((num + Number.EPSILON) * 100) / 100;\n  };\n\n  const openSaleModal = stock => {\n    setStock(stock);\n    setSaleOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"200px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Stocks in Your Portfolio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: activateLasers,\n        children: \"Activate Lasers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Company Ticker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Price of Purchase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Purchase Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Current Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Current Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Difference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: purchasedStocks.map(row => {\n            const difference = (row.currentPrice - row.purchasePrice) / row.currentPrice;\n            const purchaseTotal = Number(row.quantity) * Number(row.purchasePrice);\n            const currentTotal = Number(row.quantity) * Number(row.currentPrice);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => openSaleModal(row),\n                  children: row.ticker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name || \"----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.quantity || \"----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", row.purchasePrice.toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", roundNumber(purchaseTotal).toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: row.currentPrice >= row.purchasePrice ? styles.positive : styles.negative,\n                children: [\"$\", row.currentPrice.toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: currentTotal >= purchaseTotal ? styles.positive : styles.negative,\n                children: [\"$\", roundNumber(currentTotal).toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: difference >= 0 ? styles.positive : styles.negative,\n                children: [difference >= 0 ? \"▲\" : \"▼\", \" \", Math.abs(difference * 100).toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), saleOpen && stock && /*#__PURE__*/_jsxDEV(SaleModal, {\n        setSaleOpen: setSaleOpen,\n        stock: stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Purchases, \"CKtFRUpJkjSDpvO5yPWJQA/08+s=\");\n\n_c = Purchases;\nexport default Purchases;\n\nvar _c;\n\n$RefreshReg$(_c, \"Purchases\");","map":{"version":3,"sources":["C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/src/components/Dashboard/Purchases.jsx"],"names":["React","useState","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","SaleModal","styles","Purchases","purchasedStocks","saleOpen","setSaleOpen","stock","setStock","undefined","roundNumber","num","Math","round","Number","EPSILON","openSaleModal","minHeight","activateLasers","map","row","difference","currentPrice","purchasePrice","purchaseTotal","quantity","currentTotal","ticker","name","toLocaleString","positive","negative","abs","toFixed","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,MAAMC,SAAS,GAAG,QAAyB;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACzC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAACgB,SAAD,CAAlC;;AAEA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B,WAAOC,IAAI,CAACC,KAAL,CAAW,CAACF,GAAG,GAAGG,MAAM,CAACC,OAAd,IAAyB,GAApC,IAA2C,GAAlD;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIT,KAAD,IAAW;AAC/BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,SAAD;AAAA,oBACGd,eAAe,CAACe,GAAhB,CAAqBC,GAAD,IAAS;AAC5B,kBAAMC,UAAU,GACd,CAACD,GAAG,CAACE,YAAJ,GAAmBF,GAAG,CAACG,aAAxB,IAAyCH,GAAG,CAACE,YAD/C;AAEA,kBAAME,aAAa,GACjBV,MAAM,CAACM,GAAG,CAACK,QAAL,CAAN,GAAuBX,MAAM,CAACM,GAAG,CAACG,aAAL,CAD/B;AAEA,kBAAMG,YAAY,GAChBZ,MAAM,CAACM,GAAG,CAACK,QAAL,CAAN,GAAuBX,MAAM,CAACM,GAAG,CAACE,YAAL,CAD/B;AAEA,gCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,OAAO,EAAE,MAAMN,aAAa,CAACI,GAAD,CAAlC;AAAA,4BAA0CA,GAAG,CAACO;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,SAAD;AAAA,0BAAYP,GAAG,CAACQ,IAAJ,IAAY;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,SAAD;AAAA,0BAAYR,GAAG,CAACK,QAAJ,IAAgB;AAA5B;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,gCACIL,GAAG,CAACG,aAAJ,CAAkBM,cAAlB,MAAsC,MAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eASE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,gCACInB,WAAW,CAACc,aAAD,CAAX,CAA2BK,cAA3B,MAA+C,MADnD;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAYE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,OADR;AAEE,gBAAA,SAAS,EACPT,GAAG,CAACE,YAAJ,IAAoBF,GAAG,CAACG,aAAxB,GACIrB,MAAM,CAAC4B,QADX,GAEI5B,MAAM,CAAC6B,QALf;AAAA,gCAQIX,GAAG,CAACE,YAAJ,CAAiBO,cAAjB,MAAqC,MARzC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAsBE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,OADR;AAEE,gBAAA,SAAS,EACPH,YAAY,IAAIF,aAAhB,GACItB,MAAM,CAAC4B,QADX,GAEI5B,MAAM,CAAC6B,QALf;AAAA,gCAQIrB,WAAW,CAACgB,YAAD,CAAX,CAA0BG,cAA1B,MAA8C,MARlD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBF,eAgCE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,OADR;AAEE,gBAAA,SAAS,EACPR,UAAU,IAAI,CAAd,GAAkBnB,MAAM,CAAC4B,QAAzB,GAAoC5B,MAAM,CAAC6B,QAH/C;AAAA,2BAMGV,UAAU,IAAI,CAAd,GAAkB,GAAlB,GAAwB,GAN3B,EAMgC,GANhC,EAOGT,IAAI,CAACoB,GAAL,CAASX,UAAU,GAAG,GAAtB,EAA2BY,OAA3B,CAAmC,CAAnC,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhCF;AAAA,eAAeb,GAAG,CAACc,EAAnB;AAAA;AAAA;AAAA;AAAA,oBADF;AA4CD,WAnDA;AADH;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAyEG7B,QAAQ,IAAIE,KAAZ,iBACC,QAAC,SAAD;AAAW,QAAA,WAAW,EAAED,WAAxB;AAAqC,QAAA,KAAK,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,cA1EJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmFD,CAjGD;;GAAMJ,S;;KAAAA,S;AAmGN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"../Template/Title.jsx\";\nimport SaleModal from \"./SaleModal\";\nimport styles from \"./Dashboard.module.css\";\n\nconst Purchases = ({ purchasedStocks }) => {\n  const [saleOpen, setSaleOpen] = useState(false);\n  const [stock, setStock] = useState(undefined);\n\n  const roundNumber = (num) => {\n    return Math.round((num + Number.EPSILON) * 100) / 100;\n  };\n\n  const openSaleModal = (stock) => {\n    setStock(stock);\n    setSaleOpen(true);\n  };\n\n \n  return (\n    <React.Fragment>\n      <div style={{ minHeight: \"200px\" }}>\n        <Title>Stocks in Your Portfolio</Title>\n        <Button onClick={activateLasers}>\n          Activate Lasers\n        </Button>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Company Ticker</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Quantity</TableCell>\n              <TableCell>Price of Purchase</TableCell>\n              <TableCell>Purchase Total</TableCell>\n              <TableCell align=\"right\">Current Price</TableCell>\n              <TableCell align=\"right\">Current Total</TableCell>\n              <TableCell align=\"right\">Difference</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {purchasedStocks.map((row) => {\n              const difference =\n                (row.currentPrice - row.purchasePrice) / row.currentPrice;\n              const purchaseTotal =\n                Number(row.quantity) * Number(row.purchasePrice);\n              const currentTotal =\n                Number(row.quantity) * Number(row.currentPrice);\n              return (\n                <TableRow key={row.id}>\n                  <TableCell>\n                    <Link onClick={() => openSaleModal(row)}>{row.ticker}</Link>\n                  </TableCell>\n                  <TableCell>{row.name || \"----\"}</TableCell>\n                  <TableCell>{row.quantity || \"----\"}</TableCell>\n                  <TableCell align=\"right\">\n                    ${row.purchasePrice.toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    ${roundNumber(purchaseTotal).toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={\n                      row.currentPrice >= row.purchasePrice\n                        ? styles.positive\n                        : styles.negative\n                    }\n                  >\n                    ${row.currentPrice.toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={\n                      currentTotal >= purchaseTotal\n                        ? styles.positive\n                        : styles.negative\n                    }\n                  >\n                    ${roundNumber(currentTotal).toLocaleString() || \"----\"}\n                  </TableCell>\n                  <TableCell\n                    align=\"right\"\n                    className={\n                      difference >= 0 ? styles.positive : styles.negative\n                    }\n                  >\n                    {difference >= 0 ? \"▲\" : \"▼\"}{\" \"}\n                    {Math.abs(difference * 100).toFixed(2)}%\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n        {saleOpen && stock && (\n          <SaleModal setSaleOpen={setSaleOpen} stock={stock} />\n        )}\n      </div>\n\n      \n    </React.Fragment>\n  );\n};\n\nexport default Purchases;\n"]},"metadata":{},"sourceType":"module"}