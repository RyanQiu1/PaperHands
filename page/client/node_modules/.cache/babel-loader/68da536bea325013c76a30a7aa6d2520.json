{"ast":null,"code":"import React from\"react\";import{Line}from\"react-chartjs-2\";import Chart from'chart.js/auto';import{jsx as _jsx}from\"react/jsx-runtime\";var LineChart=function LineChart(_ref){var pastDataPeriod=_ref.pastDataPeriod,stockInfo=_ref.stockInfo,duration=_ref.duration;var formatDate=function formatDate(date){var d=new Date(date),month=\"\"+(d.getMonth()+1),day=\"\"+d.getDate();if(month.length<2)month=\"0\"+month;if(day.length<2)day=\"0\"+day;return[month,day].join(\"-\");};var lineChart=pastDataPeriod.length>0?/*#__PURE__*/_jsx(Line,{data:{labels:pastDataPeriod.map(function(_ref2,i){var date=_ref2.date;return formatDate(date);}),datasets:[{data:pastDataPeriod.map(function(_ref3){var adjClose=_ref3.adjClose;return adjClose;}),label:\"Price\",borderColor:\"rgba(0, 0, 255, 0.5)\",fill:true,backgroundColor:\"rgba(116, 185, 255, 0.2)\"}]},options:{maintainAspectRatio:false,elements:{point:{radius:2}},legend:{display:false},layout:{padding:{left:20,right:20,top:15,bottom:0}},title:{display:true,text:\"Adjusted closing stock price of \".concat(stockInfo.ticker,\" over the past \").concat(duration),position:\"bottom\"},animation:{duration:2000}}}):null;return lineChart;};export default LineChart;","map":{"version":3,"sources":["C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/src/components/Template/LineChart.jsx"],"names":["React","Line","Chart","LineChart","pastDataPeriod","stockInfo","duration","formatDate","date","d","Date","month","getMonth","day","getDate","length","join","lineChart","labels","map","i","datasets","data","adjClose","label","borderColor","fill","backgroundColor","maintainAspectRatio","elements","point","radius","legend","display","layout","padding","left","right","top","bottom","title","text","ticker","position","animation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,C,2CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA6C,IAA1CC,CAAAA,cAA0C,MAA1CA,cAA0C,CAA1BC,SAA0B,MAA1BA,SAA0B,CAAfC,QAAe,MAAfA,QAAe,CAC7D,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAC3B,GAAIC,CAAAA,CAAC,CAAG,GAAIC,CAAAA,IAAJ,CAASF,IAAT,CAAR,CACEG,KAAK,CAAG,IAAMF,CAAC,CAACG,QAAF,GAAe,CAArB,CADV,CAEEC,GAAG,CAAG,GAAKJ,CAAC,CAACK,OAAF,EAFb,CAIA,GAAIH,KAAK,CAACI,MAAN,CAAe,CAAnB,CAAsBJ,KAAK,CAAG,IAAMA,KAAd,CACtB,GAAIE,GAAG,CAACE,MAAJ,CAAa,CAAjB,CAAoBF,GAAG,CAAG,IAAMA,GAAZ,CAEpB,MAAO,CAACF,KAAD,CAAQE,GAAR,EAAaG,IAAb,CAAkB,GAAlB,CAAP,CACD,CATD,CAWA,GAAMC,CAAAA,SAAS,CACbb,cAAc,CAACW,MAAf,CAAwB,CAAxB,cACE,KAAC,IAAD,EACE,IAAI,CAAE,CACJG,MAAM,CAAEd,cAAc,CAACe,GAAf,CAAmB,eAAWC,CAAX,KAAGZ,CAAAA,IAAH,OAAGA,IAAH,OAAiBD,CAAAA,UAAU,CAACC,IAAD,CAA3B,EAAnB,CADJ,CAEJa,QAAQ,CAAE,CACR,CACEC,IAAI,CAAElB,cAAc,CAACe,GAAf,CAAmB,mBAAGI,CAAAA,QAAH,OAAGA,QAAH,OAAkBA,CAAAA,QAAlB,EAAnB,CADR,CAEEC,KAAK,CAAE,OAFT,CAGEC,WAAW,CAAE,sBAHf,CAIEC,IAAI,CAAE,IAJR,CAKEC,eAAe,CAAE,0BALnB,CADQ,CAFN,CADR,CAaE,OAAO,CAAE,CACPC,mBAAmB,CAAE,KADd,CAEPC,QAAQ,CAAE,CACRC,KAAK,CAAE,CACLC,MAAM,CAAE,CADH,CADC,CAFH,CAOPC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CAPD,CAQPC,MAAM,CAAE,CACNC,OAAO,CAAE,CACPC,IAAI,CAAE,EADC,CAEPC,KAAK,CAAE,EAFA,CAGPC,GAAG,CAAE,EAHE,CAIPC,MAAM,CAAE,CAJD,CADH,CARD,CAgBPC,KAAK,CAAE,CACLP,OAAO,CAAE,IADJ,CAELQ,IAAI,2CAAqCpC,SAAS,CAACqC,MAA/C,2BAAuEpC,QAAvE,CAFC,CAGLqC,QAAQ,CAAE,QAHL,CAhBA,CAqBPC,SAAS,CAAE,CACTtC,QAAQ,CAAE,IADD,CArBJ,CAbX,EADF,CAwCI,IAzCN,CA2CA,MAAOW,CAAAA,SAAP,CACD,CAxDD,CA0DA,cAAed,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Chart from 'chart.js/auto';\n\nconst LineChart = ({ pastDataPeriod, stockInfo, duration }) => {\n  const formatDate = (date) => {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [month, day].join(\"-\");\n  };\n\n  const lineChart =\n    pastDataPeriod.length > 0 ? (\n      <Line\n        data={{\n          labels: pastDataPeriod.map(({ date }, i) => formatDate(date)),\n          datasets: [\n            {\n              data: pastDataPeriod.map(({ adjClose }) => adjClose),\n              label: \"Price\",\n              borderColor: \"rgba(0, 0, 255, 0.5)\",\n              fill: true,\n              backgroundColor: \"rgba(116, 185, 255, 0.2)\",\n            },\n          ],\n        }}\n        options={{\n          maintainAspectRatio: false,\n          elements: {\n            point: {\n              radius: 2,\n            },\n          },\n          legend: { display: false },\n          layout: {\n            padding: {\n              left: 20,\n              right: 20,\n              top: 15,\n              bottom: 0,\n            },\n          },\n          title: {\n            display: true,\n            text: `Adjusted closing stock price of ${stockInfo.ticker} over the past ${duration}`,\n            position: \"bottom\",\n          },\n          animation: {\n            duration: 2000,\n          },\n        }}\n      />\n    ) : null;\n\n  return lineChart;\n};\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}