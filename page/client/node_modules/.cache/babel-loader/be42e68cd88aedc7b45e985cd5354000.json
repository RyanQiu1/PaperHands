{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FTChu\\\\OneDrive\\\\Documents\\\\GitHub\\\\PaperHands\\\\page\\\\client\\\\src\\\\components\\\\Dashboard\\\\Recommendations.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Title from \"../Template/Title.jsx\";\nimport SaleModal from \"./SaleModal\";\nimport styles from \"./Dashboard.module.css\";\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Recommendations = _ref => {\n  _s();\n\n  let {\n    stocks\n  } = _ref;\n  const [saleOpen, setSaleOpen] = useState(false);\n  const [stock, setStock] = useState(undefined);\n\n  const roundNumber = num => {\n    return Math.round((num + Number.EPSILON) * 100) / 100;\n  };\n\n  const openSaleModal = stock => {\n    setStock(stock);\n    setSaleOpen(true);\n  };\n\n  const onSearchButtonClick = e => {\n    e.preventDefault();\n    setCurrentPage(\"search\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        minHeight: \"200px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Top 5 Stocks Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Company Ticker\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Reported EPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Actual EPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"50 SMA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"150 SMA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"200 SMA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Recommendation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: purchasedStocks.map(row => {\n            const difference = (row.currentPrice - row.purchasePrice) / row.currentPrice;\n            const purchaseTotal = Number(row.quantity) * Number(row.purchasePrice);\n            const currentTotal = Number(row.quantity) * Number(row.currentPrice);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => openSaleModal(row),\n                  children: row.ticker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.name || \"----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row.quantity || \"----\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", row.purchasePrice.toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\"$\", roundNumber(purchaseTotal).toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: row.currentPrice >= row.purchasePrice ? styles.positive : styles.negative,\n                children: [\"$\", row.currentPrice.toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: currentTotal >= purchaseTotal ? styles.positive : styles.negative,\n                children: [\"$\", roundNumber(currentTotal).toLocaleString() || \"----\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                className: difference >= 0 ? styles.positive : styles.negative,\n                children: [difference >= 0 ? \"▲\" : \"▼\", \" \", Math.abs(difference * 100).toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, row.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), saleOpen && stock && /*#__PURE__*/_jsxDEV(SaleModal, {\n        setSaleOpen: setSaleOpen,\n        stock: stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Recommendations, \"CKtFRUpJkjSDpvO5yPWJQA/08+s=\");\n\n_c = Recommendations;\nexport default Recommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommendations\");","map":{"version":3,"sources":["C:/Users/FTChu/OneDrive/Documents/GitHub/PaperHands/page/client/src/components/Dashboard/Recommendations.jsx"],"names":["React","useState","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","SaleModal","styles","StyleSheet","Button","View","SafeAreaView","Text","Alert","Recommendations","stocks","saleOpen","setSaleOpen","stock","setStock","undefined","roundNumber","num","Math","round","Number","EPSILON","openSaleModal","onSearchButtonClick","e","preventDefault","setCurrentPage","minHeight","purchasedStocks","map","row","difference","currentPrice","purchasePrice","purchaseTotal","quantity","currentTotal","ticker","name","toLocaleString","positive","negative","abs","toFixed","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,YAAnC,EAAiDC,IAAjD,EAAuDC,KAAvD,QAAoE,cAApE;;;AAEA,MAAMC,eAAe,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACsB,SAAD,CAAlC;;AAEA,QAAMC,WAAW,GAAIC,GAAD,IAAS;AAC3B,WAAOC,IAAI,CAACC,KAAL,CAAW,CAACF,GAAG,GAAGG,MAAM,CAACC,OAAd,IAAyB,GAApC,IAA2C,GAAlD;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIT,KAAD,IAAW;AAC/BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,QAAMW,mBAAmB,GAAIC,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,cAAc,CAAC,QAAD,CAAd;AACD,GAHD;;AAKA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,SAAD;AAAA,oBACGC,eAAe,CAACC,GAAhB,CAAqBC,GAAD,IAAS;AAC5B,kBAAMC,UAAU,GACd,CAACD,GAAG,CAACE,YAAJ,GAAmBF,GAAG,CAACG,aAAxB,IAAyCH,GAAG,CAACE,YAD/C;AAEA,kBAAME,aAAa,GACjBd,MAAM,CAACU,GAAG,CAACK,QAAL,CAAN,GAAuBf,MAAM,CAACU,GAAG,CAACG,aAAL,CAD/B;AAEA,kBAAMG,YAAY,GAChBhB,MAAM,CAACU,GAAG,CAACK,QAAL,CAAN,GAAuBf,MAAM,CAACU,GAAG,CAACE,YAAL,CAD/B;AAGA,gCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,OAAO,EAAE,MAAMV,aAAa,CAACQ,GAAD,CAAlC;AAAA,4BAA0CA,GAAG,CAACO;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,SAAD;AAAA,0BAAYP,GAAG,CAACQ,IAAJ,IAAY;AAAxB;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE,QAAC,SAAD;AAAA,0BAAYR,GAAG,CAACK,QAAJ,IAAgB;AAA5B;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,gCACIL,GAAG,CAACG,aAAJ,CAAkBM,cAAlB,MAAsC,MAD1C;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eASE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA,gCACIvB,WAAW,CAACkB,aAAD,CAAX,CAA2BK,cAA3B,MAA+C,MADnD;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,eAYE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,OADR;AAEE,gBAAA,SAAS,EACPT,GAAG,CAACE,YAAJ,IAAoBF,GAAG,CAACG,aAAxB,GACI/B,MAAM,CAACsC,QADX,GAEItC,MAAM,CAACuC,QALf;AAAA,gCAQIX,GAAG,CAACE,YAAJ,CAAiBO,cAAjB,MAAqC,MARzC;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,eAsBE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,OADR;AAEE,gBAAA,SAAS,EACPH,YAAY,IAAIF,aAAhB,GACIhC,MAAM,CAACsC,QADX,GAEItC,MAAM,CAACuC,QALf;AAAA,gCAQIzB,WAAW,CAACoB,YAAD,CAAX,CAA0BG,cAA1B,MAA8C,MARlD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBF,eAgCE,QAAC,SAAD;AACE,gBAAA,KAAK,EAAC,OADR;AAEE,gBAAA,SAAS,EACPR,UAAU,IAAI,CAAd,GAAkB7B,MAAM,CAACsC,QAAzB,GAAoCtC,MAAM,CAACuC,QAH/C;AAAA,2BAMGV,UAAU,IAAI,CAAd,GAAkB,GAAlB,GAAwB,GAN3B,EAMgC,GANhC,EAOGb,IAAI,CAACwB,GAAL,CAASX,UAAU,GAAG,GAAtB,EAA2BY,OAA3B,CAAmC,CAAnC,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhCF;AAAA,eAAeb,GAAG,CAACc,EAAnB;AAAA;AAAA;AAAA;AAAA,oBADF;AA4CD,WApDA;AADH;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAwEGjC,QAAQ,IAAIE,KAAZ,iBACC,QAAC,SAAD;AAAW,QAAA,WAAW,EAAED,WAAxB;AAAqC,QAAA,KAAK,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAzEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD,CApGD;;GAAMJ,e;;KAAAA,e;AAsGN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Title from \"../Template/Title.jsx\";\r\nimport SaleModal from \"./SaleModal\";\r\nimport styles from \"./Dashboard.module.css\";\r\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react-native';\r\n\r\nconst Recommendations = ({ stocks }) => {\r\n  const [saleOpen, setSaleOpen] = useState(false);\r\n  const [stock, setStock] = useState(undefined);\r\n\r\n  const roundNumber = (num) => {\r\n    return Math.round((num + Number.EPSILON) * 100) / 100;\r\n  };\r\n\r\n  const openSaleModal = (stock) => {\r\n    setStock(stock);\r\n    setSaleOpen(true);\r\n  };\r\n\r\n  const onSearchButtonClick = (e) => {\r\n    e.preventDefault();\r\n    setCurrentPage(\"search\");\r\n  };\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ minHeight: \"200px\" }}>\r\n        <Title>Top 5 Stocks Recommendations</Title>\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Company Ticker</TableCell>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Reported EPS</TableCell>\r\n              <TableCell align=\"right\">Actual EPS</TableCell>\r\n              <TableCell align=\"right\">50 SMA</TableCell>\r\n              <TableCell align=\"right\">150 SMA</TableCell>\r\n              <TableCell align=\"right\">200 SMA</TableCell>\r\n              <TableCell align=\"right\">Recommendation</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {purchasedStocks.map((row) => {\r\n              const difference =\r\n                (row.currentPrice - row.purchasePrice) / row.currentPrice;\r\n              const purchaseTotal =\r\n                Number(row.quantity) * Number(row.purchasePrice);\r\n              const currentTotal =\r\n                Number(row.quantity) * Number(row.currentPrice);\r\n\r\n              return (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>\r\n                    <Link onClick={() => openSaleModal(row)}>{row.ticker}</Link>\r\n                  </TableCell>\r\n                  <TableCell>{row.name || \"----\"}</TableCell>\r\n                  <TableCell>{row.quantity || \"----\"}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    ${row.purchasePrice.toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    ${roundNumber(purchaseTotal).toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"right\"\r\n                    className={\r\n                      row.currentPrice >= row.purchasePrice\r\n                        ? styles.positive\r\n                        : styles.negative\r\n                    }\r\n                  >\r\n                    ${row.currentPrice.toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"right\"\r\n                    className={\r\n                      currentTotal >= purchaseTotal\r\n                        ? styles.positive\r\n                        : styles.negative\r\n                    }\r\n                  >\r\n                    ${roundNumber(currentTotal).toLocaleString() || \"----\"}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    align=\"right\"\r\n                    className={\r\n                      difference >= 0 ? styles.positive : styles.negative\r\n                    }\r\n                  >\r\n                    {difference >= 0 ? \"▲\" : \"▼\"}{\" \"}\r\n                    {Math.abs(difference * 100).toFixed(2)}%\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        {saleOpen && stock && (\r\n          <SaleModal setSaleOpen={setSaleOpen} stock={stock} />\r\n        )}\r\n      </div>\r\n\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Recommendations;\r\n"]},"metadata":{},"sourceType":"module"}