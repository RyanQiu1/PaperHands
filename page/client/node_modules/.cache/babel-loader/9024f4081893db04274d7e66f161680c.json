{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\Ryan\\\\Documents\\\\GitHub\\\\PaperHands\\\\page\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useState,useEffect}from\"react\";import{Typography,Container,Grid,Card,CardMedia,CardContent,Link,Box}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import Skeleton from\"@material-ui/lab/Skeleton\";import Axios from\"axios\";import config from\"../../config/Config\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{appBarSpacer:theme.mixins.toolbar,icon:{marginRight:theme.spacing(2)},cardGrid:{paddingTop:theme.spacing(8),paddingBottom:theme.spacing(8)},card:{height:\"100%\",display:\"flex\",flexDirection:\"column\"},cardMedia:{paddingTop:\"56.25%\"// 16:9\n},cardContent:{flexGrow:1}};});var LoadingCards=function LoadingCards(_ref){var loading=_ref.loading;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{gutterBottom:true,align:\"center\",children:loading}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:4,children:Array.from(new Array(6)).map(function(item,index){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Box,{width:210,marginRight:0.5,children:[/*#__PURE__*/_jsx(Skeleton,{variant:\"rect\",width:300,height:200}),/*#__PURE__*/_jsxs(Box,{pt:0.5,children:[/*#__PURE__*/_jsx(Skeleton,{}),/*#__PURE__*/_jsx(Skeleton,{width:\"60%\"})]})]},index)},index);})})]});};var NewsCards=function NewsCards(_ref2){var cards=_ref2.cards,classes=_ref2.classes;return/*#__PURE__*/_jsx(Grid,{container:true,spacing:4,children:cards.map(function(card){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{className:classes.card,children:[/*#__PURE__*/_jsx(Link,{href:card.url,target:\"_blank\",rel:\"noopener noreferrer\",children:/*#__PURE__*/_jsx(CardMedia,{className:classes.cardMedia,image:card.image,title:card.headline})}),/*#__PURE__*/_jsx(CardContent,{className:classes.cardContent,children:/*#__PURE__*/_jsx(Typography,{gutterBottom:true,variant:\"h6\",component:\"h4\",children:card.headline})})]})},card.id);})});};var News=function News(){var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState(\"Loading...\"),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];useEffect(function(){var getCards=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,response,newsCards;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=config.base_url+\"/api/news\";_context.next=3;return Axios.get(url);case 3:response=_context.sent;if(response.data.status===\"success\"&&response.data.data.length>0){newsCards=response.data.data.slice(0,9);setCards(newsCards);}else{setLoading(\"Sorry, we couldn't load any articles from our provider. Please try again later!\");}case 5:case\"end\":return _context.stop();}}},_callee);}));return function getCards(){return _ref3.apply(this,arguments);};}();getCards();},[]);return/*#__PURE__*/_jsx(Container,{className:classes.cardGrid,children:cards.length===0?/*#__PURE__*/_jsx(LoadingCards,{loading:loading}):/*#__PURE__*/_jsx(NewsCards,{cards:cards,classes:classes})});};export default News;","map":{"version":3,"sources":["C:/Users/Ryan/Documents/GitHub/PaperHands/page/client/src/components/News/News.jsx"],"names":["React","useState","useEffect","Typography","Container","Grid","Card","CardMedia","CardContent","Link","Box","makeStyles","Skeleton","Axios","config","useStyles","theme","appBarSpacer","mixins","toolbar","icon","marginRight","spacing","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","LoadingCards","loading","Array","from","map","item","index","NewsCards","cards","classes","url","image","headline","id","News","setCards","setLoading","getCards","base_url","get","response","data","status","length","newsCards","slice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Typography,\n  Container,\n  Grid,\n  Card,\n  CardMedia,\n  CardContent,\n  Link,\n  Box,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Axios from \"axios\";\nimport config from \"../../config/Config\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBarSpacer: theme.mixins.toolbar,\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst LoadingCards = ({ loading }) => {\n  return (\n    <div>\n      <Typography gutterBottom align=\"center\">\n        {loading}\n      </Typography>\n      <br />\n      <Grid container spacing={4}>\n        {Array.from(new Array(6)).map((item, index) => (\n          <Grid item key={index} xs={12} sm={6} md={4}>\n            <Box key={index} width={210} marginRight={0.5}>\n              <Skeleton variant=\"rect\" width={300} height={200} />\n\n              <Box pt={0.5}>\n                <Skeleton />\n                <Skeleton width=\"60%\" />\n              </Box>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nconst NewsCards = ({ cards, classes }) => {\n  return (\n    <Grid container spacing={4}>\n      {cards.map((card) => (\n        <Grid item key={card.id} xs={12} sm={6} md={4}>\n          <Card className={classes.card}>\n            <Link href={card.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <CardMedia\n                className={classes.cardMedia}\n                image={card.image}\n                title={card.headline}\n              />\n            </Link>\n            <CardContent className={classes.cardContent}>\n              <Typography gutterBottom variant=\"h6\" component=\"h4\">\n                {card.headline}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nconst News = () => {\n  const classes = useStyles();\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(\"Loading...\");\n\n  useEffect(() => {\n    const getCards = async () => {\n      const url = config.base_url + \"/api/news\";\n      const response = await Axios.get(url);\n      if (response.data.status === \"success\" && response.data.data.length > 0) {\n        const newsCards = response.data.data.slice(0, 9);\n        setCards(newsCards);\n      } else {\n        setLoading(\n          \"Sorry, we couldn't load any articles from our provider. Please try again later!\"\n        );\n      }\n    };\n\n    getCards();\n  }, []);\n\n  return (\n    <Container className={classes.cardGrid}>\n      {cards.length === 0 ? (\n        <LoadingCards loading={loading} />\n      ) : (\n        <NewsCards cards={cards} classes={classes} />\n      )}\n    </Container>\n  );\n};\n\nexport default News;\n"]},"metadata":{},"sourceType":"module"}