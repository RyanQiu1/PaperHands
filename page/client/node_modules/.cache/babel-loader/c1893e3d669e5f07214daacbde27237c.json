{"ast":null,"code":"/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nvar canUseDOM = ExecutionEnvironment.canUseDOM;\n/**\r\n * The browser implements the CSS cascade, where the order of properties is a\r\n * factor in determining which styles to paint. React Native is different. It\r\n * gives giving precedence to the more specific style property. For example,\r\n * the value of `paddingTop` takes precedence over that of `padding`.\r\n *\r\n * This module creates mutally exclusive style declarations by expanding all of\r\n * React Native's supported shortform properties (e.g. `padding`) to their\r\n * longfrom equivalents.\r\n */\n\nvar emptyObject = {};\nvar supportsCSS3TextDecoration = !canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\nvar ignoredProps = {\n  elevation: true,\n  overlayColor: true,\n  resizeMode: true,\n  tintColor: true\n};\nvar MONOSPACE_FONT_STACK = 'monospace,monospace';\nvar SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\nvar STYLE_SHORT_FORM_EXPANSIONS = {\n  borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n  borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n  borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n  borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n  marginHorizontal: ['marginRight', 'marginLeft'],\n  marginVertical: ['marginTop', 'marginBottom'],\n  overflow: ['overflowX', 'overflowY'],\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\n  paddingVertical: ['paddingTop', 'paddingBottom']\n};\n/**\r\n * Transform\r\n */\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\n// { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\n\nvar mapTransform = function mapTransform(transform) {\n  var type = Object.keys(transform)[0];\n  var value = transform[type];\n\n  if (type === 'matrix' || type === 'matrix3d') {\n    return type + \"(\" + value.join(',') + \")\";\n  } else {\n    var normalizedValue = normalizeValueWithProperty(value, type);\n    return type + \"(\" + normalizedValue + \")\";\n  }\n};\n\nexport var createTransformValue = function createTransformValue(style) {\n  var transform = style.transform;\n\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  }\n\n  return transform;\n};\n/**\r\n * Reducer\r\n */\n\nvar createReactDOMStyle = function createReactDOMStyle(style, isInline) {\n  if (!style) {\n    return emptyObject;\n  }\n\n  var resolvedStyle = {};\n\n  for (var prop in style) {\n    var value = style[prop];\n\n    if ( // Ignore everything with a null value\n    value == null || // Ignore some React Native styles\n    ignoredProps[prop]) {\n      continue;\n    }\n\n    if (prop === 'aspectRatio') {\n      resolvedStyle[prop] = value.toString();\n    } else if (prop === 'backgroundClip') {\n      // TODO: remove once this issue is fixed\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n      if (value === 'text') {\n        resolvedStyle.backgroundClip = value;\n        resolvedStyle.WebkitBackgroundClip = value;\n      }\n    } else if (prop === 'flex') {\n      if (value === -1) {\n        resolvedStyle.flexGrow = 0;\n        resolvedStyle.flexShrink = 1;\n        resolvedStyle.flexBasis = 'auto';\n      } else {\n        resolvedStyle.flex = value;\n      }\n    } else if (prop === 'font') {\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n    } else if (prop === 'fontFamily') {\n      if (value.indexOf('System') > -1) {\n        var stack = value.split(/,\\s*/);\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n        resolvedStyle[prop] = stack.join(',');\n      } else if (value === 'monospace') {\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n      } else {\n        resolvedStyle[prop] = value;\n      }\n    } else if (prop === 'fontVariant') {\n      if (Array.isArray(value) && value.length > 0) {\n        resolvedStyle.fontVariant = value.join(' ');\n      }\n    } else if (prop === 'textAlignVertical') {\n      resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n    } else if (prop === 'textDecorationLine') {\n      // use 'text-decoration' for browsers that only support CSS2\n      // text-decoration (e.g., IE, Edge)\n      if (!supportsCSS3TextDecoration) {\n        resolvedStyle.textDecoration = value;\n      } else {\n        resolvedStyle.textDecorationLine = value;\n      }\n    } else if (prop === 'transform' || prop === 'transformMatrix') {\n      resolvedStyle.transform = createTransformValue(style);\n    } else if (prop === 'writingDirection') {\n      resolvedStyle.direction = value;\n    } else {\n      (function () {\n        var value = normalizeValueWithProperty(style[prop], prop);\n        var longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n\n        if (isInline && prop === 'margin') {\n          if (style.marginHorizontal == null) {\n            resolvedStyle.marginLeft = value;\n            resolvedStyle.marginRight = value;\n          }\n\n          if (style.marginVertical == null) {\n            resolvedStyle.marginTop = value;\n            resolvedStyle.marginBottom = value;\n          }\n        } else if (isInline && prop === 'padding') {\n          if (style.paddingHorizontal == null) {\n            resolvedStyle.paddingLeft = value;\n            resolvedStyle.paddingRight = value;\n          }\n\n          if (style.paddingVertical == null) {\n            resolvedStyle.paddingTop = value;\n            resolvedStyle.paddingBottom = value;\n          }\n        } else if (longFormProperties) {\n          longFormProperties.forEach(function (longForm, i) {\n            // The value of any longform property in the original styles takes\n            // precedence over the shortform's value.\n            if (style[longForm] == null) {\n              resolvedStyle[longForm] = value;\n            }\n          });\n        } else {\n          resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n        }\n      })();\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;","map":{"version":3,"sources":["C:/Users/FTChu/OneDrive/Documents/GitHub/PaperHands/page/client/node_modules/react-native-web/dist/exports/StyleSheet/compiler/createReactDOMStyle.js"],"names":["normalizeValueWithProperty","ExecutionEnvironment","canUseDOM","emptyObject","supportsCSS3TextDecoration","window","CSS","supports","ignoredProps","elevation","overlayColor","resizeMode","tintColor","MONOSPACE_FONT_STACK","SYSTEM_FONT_STACK","STYLE_SHORT_FORM_EXPANSIONS","borderColor","borderRadius","borderStyle","borderWidth","marginHorizontal","marginVertical","overflow","overscrollBehavior","paddingHorizontal","paddingVertical","mapTransform","transform","type","Object","keys","value","join","normalizedValue","createTransformValue","style","Array","isArray","map","createReactDOMStyle","isInline","resolvedStyle","prop","toString","backgroundClip","WebkitBackgroundClip","flexGrow","flexShrink","flexBasis","flex","replace","indexOf","stack","split","length","fontVariant","verticalAlign","textDecoration","textDecorationLine","direction","longFormProperties","marginLeft","marginRight","marginTop","marginBottom","paddingLeft","paddingRight","paddingTop","paddingBottom","forEach","longForm","i"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (c) Nicolas Gallagher.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\r\nimport ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\r\nvar canUseDOM = ExecutionEnvironment.canUseDOM;\r\n\r\n/**\r\n * The browser implements the CSS cascade, where the order of properties is a\r\n * factor in determining which styles to paint. React Native is different. It\r\n * gives giving precedence to the more specific style property. For example,\r\n * the value of `paddingTop` takes precedence over that of `padding`.\r\n *\r\n * This module creates mutally exclusive style declarations by expanding all of\r\n * React Native's supported shortform properties (e.g. `padding`) to their\r\n * longfrom equivalents.\r\n */\r\nvar emptyObject = {};\r\nvar supportsCSS3TextDecoration = !canUseDOM || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\r\nvar ignoredProps = {\r\n  elevation: true,\r\n  overlayColor: true,\r\n  resizeMode: true,\r\n  tintColor: true\r\n};\r\nvar MONOSPACE_FONT_STACK = 'monospace,monospace';\r\nvar SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\r\nvar STYLE_SHORT_FORM_EXPANSIONS = {\r\n  borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\r\n  borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\r\n  borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\r\n  borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\r\n  marginHorizontal: ['marginRight', 'marginLeft'],\r\n  marginVertical: ['marginTop', 'marginBottom'],\r\n  overflow: ['overflowX', 'overflowY'],\r\n  overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\r\n  paddingHorizontal: ['paddingRight', 'paddingLeft'],\r\n  paddingVertical: ['paddingTop', 'paddingBottom']\r\n};\r\n/**\r\n * Transform\r\n */\r\n// { scale: 2 } => 'scale(2)'\r\n// { translateX: 20 } => 'translateX(20px)'\r\n// { matrix: [1,2,3,4,5,6] } => 'matrix(1,2,3,4,5,6)'\r\n\r\nvar mapTransform = function mapTransform(transform) {\r\n  var type = Object.keys(transform)[0];\r\n  var value = transform[type];\r\n\r\n  if (type === 'matrix' || type === 'matrix3d') {\r\n    return type + \"(\" + value.join(',') + \")\";\r\n  } else {\r\n    var normalizedValue = normalizeValueWithProperty(value, type);\r\n    return type + \"(\" + normalizedValue + \")\";\r\n  }\r\n};\r\n\r\nexport var createTransformValue = function createTransformValue(style) {\r\n  var transform = style.transform;\r\n\r\n  if (Array.isArray(style.transform)) {\r\n    transform = style.transform.map(mapTransform).join(' ');\r\n  }\r\n\r\n  return transform;\r\n};\r\n/**\r\n * Reducer\r\n */\r\n\r\nvar createReactDOMStyle = function createReactDOMStyle(style, isInline) {\r\n  if (!style) {\r\n    return emptyObject;\r\n  }\r\n\r\n  var resolvedStyle = {};\r\n\r\n  for (var prop in style) {\r\n    var value = style[prop];\r\n\r\n    if ( // Ignore everything with a null value\r\n    value == null || // Ignore some React Native styles\r\n    ignoredProps[prop]) {\r\n      continue;\r\n    }\r\n\r\n    if (prop === 'aspectRatio') {\r\n      resolvedStyle[prop] = value.toString();\r\n    } else if (prop === 'backgroundClip') {\r\n      // TODO: remove once this issue is fixed\r\n      // https://github.com/rofrischmann/inline-style-prefixer/issues/159\r\n      if (value === 'text') {\r\n        resolvedStyle.backgroundClip = value;\r\n        resolvedStyle.WebkitBackgroundClip = value;\r\n      }\r\n    } else if (prop === 'flex') {\r\n      if (value === -1) {\r\n        resolvedStyle.flexGrow = 0;\r\n        resolvedStyle.flexShrink = 1;\r\n        resolvedStyle.flexBasis = 'auto';\r\n      } else {\r\n        resolvedStyle.flex = value;\r\n      }\r\n    } else if (prop === 'font') {\r\n      resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\r\n    } else if (prop === 'fontFamily') {\r\n      if (value.indexOf('System') > -1) {\r\n        var stack = value.split(/,\\s*/);\r\n        stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\r\n        resolvedStyle[prop] = stack.join(',');\r\n      } else if (value === 'monospace') {\r\n        resolvedStyle[prop] = MONOSPACE_FONT_STACK;\r\n      } else {\r\n        resolvedStyle[prop] = value;\r\n      }\r\n    } else if (prop === 'fontVariant') {\r\n      if (Array.isArray(value) && value.length > 0) {\r\n        resolvedStyle.fontVariant = value.join(' ');\r\n      }\r\n    } else if (prop === 'textAlignVertical') {\r\n      resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\r\n    } else if (prop === 'textDecorationLine') {\r\n      // use 'text-decoration' for browsers that only support CSS2\r\n      // text-decoration (e.g., IE, Edge)\r\n      if (!supportsCSS3TextDecoration) {\r\n        resolvedStyle.textDecoration = value;\r\n      } else {\r\n        resolvedStyle.textDecorationLine = value;\r\n      }\r\n    } else if (prop === 'transform' || prop === 'transformMatrix') {\r\n      resolvedStyle.transform = createTransformValue(style);\r\n    } else if (prop === 'writingDirection') {\r\n      resolvedStyle.direction = value;\r\n    } else {\r\n      (function () {\r\n        var value = normalizeValueWithProperty(style[prop], prop);\r\n        var longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\r\n\r\n        if (isInline && prop === 'margin') {\r\n          if (style.marginHorizontal == null) {\r\n            resolvedStyle.marginLeft = value;\r\n            resolvedStyle.marginRight = value;\r\n          }\r\n\r\n          if (style.marginVertical == null) {\r\n            resolvedStyle.marginTop = value;\r\n            resolvedStyle.marginBottom = value;\r\n          }\r\n        } else if (isInline && prop === 'padding') {\r\n          if (style.paddingHorizontal == null) {\r\n            resolvedStyle.paddingLeft = value;\r\n            resolvedStyle.paddingRight = value;\r\n          }\r\n\r\n          if (style.paddingVertical == null) {\r\n            resolvedStyle.paddingTop = value;\r\n            resolvedStyle.paddingBottom = value;\r\n          }\r\n        } else if (longFormProperties) {\r\n          longFormProperties.forEach(function (longForm, i) {\r\n            // The value of any longform property in the original styles takes\r\n            // precedence over the shortform's value.\r\n            if (style[longForm] == null) {\r\n              resolvedStyle[longForm] = value;\r\n            }\r\n          });\r\n        } else {\r\n          resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\r\n        }\r\n      })();\r\n    }\r\n  }\r\n\r\n  return resolvedStyle;\r\n};\r\n\r\nexport default createReactDOMStyle;"]},"metadata":{},"sourceType":"module"}